name: AWIP Mission Control CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  security:
    name: Security & Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --silent

      - name: Security audit
        run: npm audit --audit-level=high

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'awip-mission-control'
          path: '.'
          format: 'HTML'

      - name: Scan for hardcoded secrets
        run: |
          echo "üîç Scanning for potential security issues..."
          # Check for potential tokens
          if grep -r "ghp_" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "‚ùå Found potential GitHub tokens"
            exit 1
          fi
          if grep -r "sk-" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "‚ùå Found potential API keys"
            exit 1
          fi
          if grep -r "eyJ" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "‚ùå Found potential JWT tokens"
            exit 1
          fi
          echo "‚úÖ No hardcoded secrets detected"

  test:
    name: Test & Validation
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --silent

      - name: Lint JavaScript
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Validate HTML
        run: |
          echo "Validating HTML files..."
          npm install -g html-validate
          html-validate *.html || echo "HTML validation completed with warnings"

      - name: Check file integrity
        run: |
          echo "Checking file integrity..."
          ls -la *.html *.js *.css
          echo "‚úÖ All core files present"

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [security, test]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Verify deployment
        run: |
          echo "üöÄ AWIP Mission Control deployed successfully"
          echo "üìä Dashboard URL: https://cjaisingh.github.io/awip-mission-control/"
